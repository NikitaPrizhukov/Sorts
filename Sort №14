#include <iostream>
#include <vector>
using namespace std;

//вывести среднее значение, при котором половина значений будет ниже, а вторая половина выше

int* twoOnOne(int* masOne, int* masTwo, int* masSum, int lenOne, int lenTwo) {

	int one = 0;
	int two = 0;
	int sum = 0;


	for (int i = 0; i < lenOne + lenTwo; i++) {

		if (one > lenOne - 1) {
			for (int f = two; f < lenTwo; f++) {
				masSum[sum] = masTwo[f];
				sum++;
			}
			break;
		}
		else if (two > lenTwo - 1) {
			for (int f = one; f < lenOne; f++) {
				masSum[sum] = masOne[f];
				sum++;
			}
			break;
		}

		if (masOne[one] < masTwo[two]) {
			masSum[sum] = masOne[one];
			sum++;
			one++;
		}
		else {
			masSum[sum] = masTwo[two];
			sum++;
			two++;
		}
	}
	return masSum;
}

double findTreshIndex(int* mas, int len) {

	int midle = (len - 1) / 2;
	double find;

	if (len % 2 == 0) {
		int midleSecond = midle + 1;
		find = (mas[midle] + mas[midleSecond]) / 2.0;
		return find;
	}
	else {
		return mas[midle];
	}


}

int main() {

	int lenOne;
	int lenTwo;
	cin >> lenOne;
	cin >> lenTwo;

	int* masOne = new int[lenOne];
	int* masTwo = new int[lenTwo];

	for (int i = 0; i < lenOne; i++) {
		cin >> masOne[i];
	}

	for (int i = 0; i < lenTwo; i++) {
		cin >> masTwo[i];
	}

	int* masSum = new int[lenOne + lenTwo];

	twoOnOne(masOne, masTwo, masSum, lenOne, lenTwo);

	cout << findTreshIndex(masSum, lenOne + lenTwo);

	return 0;
}
