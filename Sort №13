#include <iostream>
#include <vector>
using namespace std;

//сортировка по разрядам 

class Discharge
{
private:
	int number;
	int* discharge;

public:

	Discharge() {}

	Discharge(int a) {
		number = a;
		discharge = new int[6];
		int sector = 100000;
		for (int i = 0; i < 6; i++) {
			discharge[i] = (a / sector) % 10;
			sector = sector / 10;
		}
	}

	void print() {

		cout << this->number << " ";

	}

	int nextIndex(int i) {

		return this->discharge[5 - i];

	}
};

void radixSort(Discharge** mas, int count, int next = 0) {

	if (next > 5) {
		return;
	}

	vector<Discharge>* dis = new vector<Discharge>[10];
	int index = 0;
	while (index < 10) {

		for (int i = 0; i < count; i++) {
			if (mas[i]->nextIndex(next) == index) {
				dis[index].push_back(*mas[i]);
			}
		}
		index++;
	}
	index = 0;
	int s = 0;

	while (index < 10) {

		for (int i = 0; i < dis[index].size(); i++) {
			*mas[s] = dis[index][i];
			s++;
		}
		index++;
	}

	delete[] dis;

	radixSort(mas, count, next + 1);
	return;
}

int main() {

	int count;
	cin >> count;
	Discharge** mas = new Discharge * [count];

	for (int i = 0; i < count; i++) {
		int c = 0;
		cin >> c;
		mas[i] = new Discharge(c);
	}

	radixSort(mas, count);

	for (int i = 0; i < count; i++) {
		mas[i]->print();
	}

	delete[] mas;

	return 0;
}
